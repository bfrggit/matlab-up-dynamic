for lv = 0:5
    load(sprintf('mat/half_ds_size_dy_data_%d.mat', lv));

    figure;
    plot(size_of_ds, reward_total(:, 1), ...
        size_of_ds, reward_total(:, 4), '--*', ...
        size_of_ds, reward_total(:, 7), '--o', ...
        size_of_ds, reward_total(:, 6), '-*', ...
        size_of_ds, reward_total(:, 9), '-o');
    xlabel('Average size of data chunks (KB)');
    ylabel('Weighted overall utility');
    legend('First opportunity', 'Balanced DOP', 'Genetic algorithm', ...
        'BDOP-Lyapunov', 'GA-Lyapunov', ...
        'Location', 'southwest');
    saveas(gcf, sprintf('fig_3/half_ds_size_x_dy_data_%d.fig', lv));

    figure;
    plot(size_of_ds, length_task(:, 1), ...
        size_of_ds, length_task(:, 4), '--*', ...
        size_of_ds, length_task(:, 7), '--o', ...
        size_of_ds, length_task(:, 6), '-*', ...
        size_of_ds, length_task(:, 9), '-o');
    xlabel('Average size of data chunks (KB)');
    ylabel('Time to complete all data collection (sec)');
    legend('First opportunity', 'Balanced DOP', 'Genetic algorithm', ...
        'BDOP-Lyapunov', 'GA-Lyapunov', ...
        'Location', 'northwest');
    saveas(gcf, sprintf('fig_3/half_ds_size_length_x_dy_data_%d.fig', lv));
    
    figure;
    plot(size_of_ds, reward_stdev(:, 1), ...
        size_of_ds, reward_stdev(:, 4), '--*', ...
        size_of_ds, reward_stdev(:, 7), '--o', ...
        size_of_ds, reward_stdev(:, 6), '-*', ...
        size_of_ds, reward_stdev(:, 9), '-o');
    xlabel('Average size of data chunks (KB)');
    ylabel('STDEV of weighted overall utility');
    legend('First opportunity', 'Balanced DOP', 'Genetic algorithm', ...
        'BDOP-Lyapunov', 'GA-Lyapunov', ...
        'Location', 'southeast');
    saveas(gcf, sprintf('fig_3/half_ds_size_stdev_x_dy_data_%d.fig', lv));
end